unittests:
  extends: .recompile-branch
  stage: build
  image: registry.gitlab.com/veloren/veloren-docker-ci/cache/quality:${CACHE_IMAGE_TAG}
  tags: ["veloren/*", "check"]
  variables:
    GIT_DEPTH: 9999999999999
  script:
    - ln -s /dockercache/target target
    - rm -r target/debug/incremental/veloren_* || echo "all good" # TMP FIX FOR 2021-03-22-nightly
    - rm -r target/debug/incremental* || echo "all good" # TMP FIX FOR 2021-03-22-nightly
    - cargo test --all-features
  retry:
    max: 2

# Coverage is needed on master for the README.md badge to work
# tmp remove simd as it doesnt work with tarpaulin: https://github.com/rust-lang/rust/issues/77529
#coverage:
#  extends: .publish
#  stage: build
#  image: registry.gitlab.com/veloren/veloren-docker-ci/cache/tarpaulin:${CACHE_IMAGE_TAG}
#  script:
#    - ln -s /dockercache/target target
#    - rm -r target/debug/incremental/veloren_* || echo "all good" # TMP FIX FOR 2021-03-22-nightly
#    - find ./* -name "Cargo.toml" -exec sed -i 's/, "simd"]/]/g' {} \;
#    - find ./* -name "Cargo.toml" -exec sed -i 's/"simd"]/]/g' {} \;
#    - sed -i 's/vek /#vek /g' ./Cargo.toml;
#    - cargo tarpaulin -v -- --test-threads=2
#  retry:
#    max: 2

#linux, windows, macos builds here as template
.tlinux:
  image: registry.gitlab.com/veloren/veloren-docker-ci/cache/release-linux-x86_64:${CACHE_IMAGE_TAG}
  script:
    - ln -s /dockercache/target target
    - rm -r target/release/incremental/veloren_* || echo "all good" # TMP FIX FOR 2021-03-22-nightly
    - cargo build --release -p airshipper --all-features
    - cargo build --release -p airshipper-server --all-features
    - cp -r target/release/airshipper $CI_PROJECT_DIR
    - cp -r target/release/airshipper-server $CI_PROJECT_DIR
  artifacts:
    paths:
      - airshipper
      - airshipper-server
      - LICENSE
    expire_in: 1 week

.twindows:
  image: registry.gitlab.com/veloren/veloren-docker-ci/cache/release-windows-x86_64:${CACHE_IMAGE_TAG}
  script:
    - cargo install cargo-wix --version 0.3.0
    - update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
    - update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
    - ln -s /dockercache/target target
    - rm -r target/release/incremental/veloren_* || echo "all good" # TMP FIX FOR 2021-03-22-nightly
    - cargo build --target=x86_64-pc-windows-gnu --release -p airshipper --all-features
    - cargo build --target=x86_64-pc-windows-gnu --release -p airshipper-server --all-features
    # skip windows installer for now on gitlab
    #- cargo wix client/Cargo.toml -o ./target/wix/ --nocapture --no-build
    #- cp -r target/wix/airshipper-*-x86_64.msi $CI_PROJECT_DIR/airshipper-windows.msi
    - cp -r target/x86_64-pc-windows-gnu/release/airshipper.exe $CI_PROJECT_DIR
    - cp -r target/x86_64-pc-windows-gnu/release/airshipper-server.exe $CI_PROJECT_DIR
    - cp /usr/lib/gcc/x86_64-w64-mingw32/7.3-posix/libgcc_s_seh-1.dll $CI_PROJECT_DIR
    - cp /usr/lib/gcc/x86_64-w64-mingw32/7.3-posix/libstdc++-6.dll $CI_PROJECT_DIR
    - cp /usr/x86_64-w64-mingw32/lib/libwinpthread-1.dll $CI_PROJECT_DIR
  artifacts:
    paths:
      #- airshipper-windows.msi
      - airshipper.exe
      - airshipper-server.exe
      - LICENSE
      - libgcc_s_seh-1.dll
      - libstdc++-6.dll
      - libwinpthread-1.dll
    expire_in: 1 week

.tmacos:
  tags: ["veloren-macos"]
  before_script:
    - source $HOME/.cargo/env
    - cargo --version
    - export DISABLE_GIT_LFS_CHECK=true
    - export RUSTFLAGS="-D warnings"
  script:
    - export MACOSX_DEPLOYMENT_TARGET="10.13"
    - cargo build --release -p airshipper --all-features
    - cargo build --release -p airshipper-server --all-features
    - cp -r target/release/airshipper $CI_PROJECT_DIR
    - cp -r target/release/airshipper-server $CI_PROJECT_DIR
  artifacts:
    paths:
      - airshipper
      - airshipper-server
      - LICENSE
    expire_in: 1 week

.tmacos-aarch64:
  extends:
    - .tmacos
  before_script:
    - export RUST_TARGET="aarch64-apple-darwin"

# e.g. post merge and scheduled builds
.tmacos-master-cache:
    cache:
      key: "macos-master-cache"
      paths:
        - target/

# e.g. optional builds from MRs
.tmacos-mr-cache:
    cache:
      key: "macos-mr-cache"
      paths:
        - target/

# build on release or master
linux:
  extends:
    - .tlinux
    - .release
  tags: ["veloren/*", "build", "publish", "trusted"]

windows:
  extends:
    - .twindows
    - .release
  tags: ["veloren/*", "build", "publish", "trusted"]

macos-x86_64:
  extends:
    - .tmacos
    - .release
    - .tmacos-master-cache
  tags: ["veloren/*:macos", "build", "publish", "trusted"]

macos-aarch64:
  extends:
    - .tmacos-aarch64
    - .release
  tags: ["veloren/*:macos", "build", "publish", "trusted"]

# if NOT release or master, allow optional builds
opt-linux:
  extends:
    - .tlinux
    - .optional-release
  tags: ["veloren/*", "build"]

opt-windows:
  extends:
    - .twindows
    - .optional-release
  tags: ["veloren/*", "build"]

opt-macos-x86_64:
  extends:
    - .tmacos
    - .optional-release
    - .optional-release

  tags: ["veloren/*:macos", "build"]

opt-macos-aarch64:
  extends:
    - .tmacos-aarch64
    - .optional-release
  tags: ["veloren/*:macos", "build"]
