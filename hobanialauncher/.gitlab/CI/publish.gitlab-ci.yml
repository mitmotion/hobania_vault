# Publishes hobania-server-cli to the gitlab container registry
# https://gitlab.com/hobania/hobania/container_registry
.publish:
  stage: publish
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
    - when: never

.publish-nightly:
  stage: publish
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
    - when: never

docker:
  extends: .publish
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags: ["hobania/*", "publish", "trusted"]
  dependencies:
    - linux
  before_script:
    - ls "$CI_PROJECT_DIR/server/"
  script:
    # Help kaniko identify that it is running in a container.
    # avoids this issue: https://github.com/GoogleContainerTools/kaniko/issues/1542
    - export container=docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/server/Dockerfile --destination "${CI_REGISTRY_IMAGE}/server:${CI_COMMIT_REF_NAME}"

pages:
  extends: .publish
  image: registry.gitlab.com/hobania/hobania-docker-ci/cache/quality:${CACHE_IMAGE_TAG}
  tags: ["hobania/*", "publish"]
  artifacts:
    paths:
      - public
  script:
    - rm -rf public
    - mkdir -p public
    - cargo doc --no-deps --document-private-items
    - mv target/doc/* public
